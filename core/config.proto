syntax = "proto3";

package xray.core;
option csharp_namespace = "Xray.Core";
option go_package = "github.com/4nd3r5on/Xray-core/core";
option java_package = "com.xray.core";
option java_multiple_files = true;

import "common/serial/typed_message.proto";
import "transport/global/config.proto";
import "app/proxyman/config.proto";

// Config is the master config of Xray. Xray takes this config as input and
// functions accordingly.
message Config {
  // Inbound handler configurations. Must have at least one item.
  repeated xray.app.proxyman.InboundHandlerConfig inbound = 1;

  // Outbound handler configurations. Must have at least one item. The first
  // item is used as default for routing.
  repeated xray.app.proxyman.OutboundHandlerConfig outbound = 2;

  reserved 3;

  // App is for configurations of all features in Xray. A feature must
  // implement the Feature interface, and its config type must be registered
  // through common.RegisterConfig.
  repeated xray.common.serial.TypedMessage app = 4;

  // Configuration for extensions. The config may not work if corresponding
  // extension is not loaded into Xray. Xray will ignore such config during
  // initialization.
  repeated xray.common.serial.TypedMessage extension = 6;
}
